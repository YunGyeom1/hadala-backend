"""init

Revision ID: 8a9b26fce8a7
Revises: 
Create Date: 2025-06-07 00:03:10.114975

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8a9b26fce8a7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_table(
        'users',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('email', sa.String(), unique=True, index=True, nullable=False),
        sa.Column('picture_url', sa.String(), nullable=True),
        sa.Column('oauth_provider', sa.String(), nullable=False),
        sa.Column('oauth_sub', sa.String(), nullable=False, index=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )
    op.create_table(
        'wholesalers',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('user_id', sa.UUID(), sa.ForeignKey('users.id'), unique=True, nullable=False),
        sa.Column('company_id', sa.UUID(), nullable=True),
        sa.Column('role', sa.String(), nullable=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )
    op.create_table(
        'companies',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('name', sa.String(), nullable=False, unique=True),
        sa.Column('owner', sa.UUID(), sa.ForeignKey('wholesalers.id'), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )
    op.create_foreign_key('fk_wholesalers_company_id', 'wholesalers', 'companies', ['company_id'], ['id'])
    op.create_table(
        'farmers',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('user_id', sa.UUID(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('farm_name', sa.String(), nullable=False),
        sa.Column('farm_address', sa.String(), nullable=False),
        sa.Column('farm_description', sa.Text(), nullable=True),
        sa.Column('contact_number', sa.String(), nullable=True),
        sa.Column('is_verified', sa.Boolean(), default=False),
        sa.Column('profile_image_url', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )
    op.create_table(
        'collection_centers',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('company_id', sa.UUID(), sa.ForeignKey('companies.id'), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    )
    op.create_table(
        'collection_center_wholesaler',
        sa.Column('collection_center_id', sa.UUID(), sa.ForeignKey('collection_centers.id'), primary_key=True, nullable=False),
        sa.Column('wholesaler_id', sa.UUID(), sa.ForeignKey('wholesalers.id'), primary_key=True, nullable=False),
        sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('wholesalers', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'wholesalers', type_='foreignkey')
    op.drop_constraint(None, 'wholesalers', type_='unique')
    op.alter_column('wholesalers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('wholesalers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('wholesalers', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('wholesalers', 'role',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('wholesalers', 'company_id')
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_oauth_sub'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('users', 'oauth_sub')
    op.drop_column('users', 'oauth_provider')
    op.drop_column('users', 'picture_url')
    op.drop_column('users', 'name')
    op.add_column('farmers', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('farmers', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('farmers', sa.Column('yearly_yield', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('farmers', sa.Column('farm_members', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('farmers', sa.Column('farm_size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.alter_column('farmers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('farmers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('farmers', 'profile_image_url')
    op.drop_column('farmers', 'is_verified')
    op.drop_column('farmers', 'contact_number')
    op.drop_column('farmers', 'farm_description')
    op.drop_column('farmers', 'farm_address')
    op.drop_column('farmers', 'farm_name')
    op.drop_table('collection_center_wholesaler')
    op.drop_index(op.f('ix_collection_centers_id'), table_name='collection_centers')
    op.drop_table('collection_centers')
    op.drop_table('companies')
    # ### end Alembic commands ###
