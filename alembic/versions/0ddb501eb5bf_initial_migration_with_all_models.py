"""Initial migration with all models

Revision ID: 0ddb501eb5bf
Revises: 
Create Date: 2025-08-06 15:55:36.679387

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0ddb501eb5bf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('wholesaler', 'retailer', 'farmer', name='companytype'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('wholesale_company_detail_id', sa.UUID(), nullable=True),
    sa.Column('retail_company_detail_id', sa.UUID(), nullable=True),
    sa.Column('farm_company_detail_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['farm_company_detail_id'], ['farmer_company_details.company_id'], use_alter=True),
    sa.ForeignKeyConstraint(['owner_id'], ['profiles.id'], use_alter=True),
    sa.ForeignKeyConstraint(['retail_company_detail_id'], ['retail_company_details.company_id'], use_alter=True),
    sa.ForeignKeyConstraint(['wholesale_company_detail_id'], ['wholesale_company_details.company_id'], use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=True)
    op.create_table('farmer_company_details',
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('representative', sa.String(), nullable=True),
    sa.Column('business_registration_number', sa.String(), nullable=True),
    sa.Column('established_year', sa.Integer(), nullable=True),
    sa.Column('main_products', sa.String(), nullable=True),
    sa.Column('farm_size', sa.Float(), nullable=True),
    sa.Column('annual_production', sa.Float(), nullable=True),
    sa.Column('cultivation_method', sa.String(), nullable=True),
    sa.Column('certification_info', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], use_alter=True),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('picture_url', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('oauth_sub', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('wholesale_company_details',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('representative', sa.String(), nullable=True),
    sa.Column('business_registration_number', sa.String(), nullable=True),
    sa.Column('established_year', sa.Integer(), nullable=True),
    sa.Column('monthly_transaction_volume', sa.Float(), nullable=True),
    sa.Column('daily_transport_capacity', sa.Float(), nullable=True),
    sa.Column('main_products', sa.String(), nullable=True),
    sa.Column('has_cold_storage', sa.Boolean(), nullable=True),
    sa.Column('number_of_vehicles', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.Enum('wholesaler', 'retailer', 'farmer', name='profiletype'), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.Column('role', sa.Enum('owner', 'manager', 'member', name='profilerole'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profiles_username'), 'profiles', ['username'], unique=True)
    op.create_table('retail_company_details',
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('representative', sa.String(), nullable=True),
    sa.Column('business_registration_number', sa.String(), nullable=True),
    sa.Column('established_year', sa.Integer(), nullable=True),
    sa.Column('daily_consumption', sa.Float(), nullable=True),
    sa.Column('main_products', sa.String(), nullable=True),
    sa.Column('preferred_delivery_day', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('centers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('manager_profile_id', sa.UUID(), nullable=True),
    sa.Column('operating_start', sa.Time(), nullable=True),
    sa.Column('operating_end', sa.Time(), nullable=True),
    sa.Column('is_operational', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['manager_profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('center_inventory_snapshots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('total_quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('finalized', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_center_inventory_snapshots_center_id'), 'center_inventory_snapshots', ['center_id'], unique=False)
    op.create_index(op.f('ix_center_inventory_snapshots_company_id'), 'center_inventory_snapshots', ['company_id'], unique=False)
    op.create_index(op.f('ix_center_inventory_snapshots_snapshot_date'), 'center_inventory_snapshots', ['snapshot_date'], unique=False)
    op.create_table('contracts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('supplier_contractor_id', sa.UUID(), nullable=True),
    sa.Column('supplier_company_id', sa.UUID(), nullable=True),
    sa.Column('receiver_contractor_id', sa.UUID(), nullable=True),
    sa.Column('receiver_company_id', sa.UUID(), nullable=True),
    sa.Column('departure_center_id', sa.UUID(), nullable=True),
    sa.Column('arrival_center_id', sa.UUID(), nullable=True),
    sa.Column('contract_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('contract_status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', 'COMPLETED', name='contractstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('UNPAID', 'PARTIAL', 'PREPARED', 'OVERDUE', 'PAID', 'REFUNDED', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('next_contract_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['arrival_center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['departure_center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['next_contract_id'], ['contracts.id'], ),
    sa.ForeignKeyConstraint(['receiver_company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['receiver_contractor_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['supplier_company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['supplier_contractor_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('center_snapshot_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('center_inventory_snapshot_id', sa.UUID(), nullable=False),
    sa.Column('product_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Enum('A', 'B', 'C', name='productquality'), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['center_inventory_snapshot_id'], ['center_inventory_snapshots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_center_snapshot_items_center_inventory_snapshot_id'), 'center_snapshot_items', ['center_inventory_snapshot_id'], unique=False)
    op.create_table('contract_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('product_name', sa.String(), nullable=False),
    sa.Column('quality', sa.Enum('A', 'B', 'C', name='productquality'), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('supplier_person_id', sa.UUID(), nullable=True),
    sa.Column('supplier_company_id', sa.UUID(), nullable=True),
    sa.Column('receiver_person_id', sa.UUID(), nullable=True),
    sa.Column('receiver_company_id', sa.UUID(), nullable=True),
    sa.Column('departure_center_id', sa.UUID(), nullable=True),
    sa.Column('arrival_center_id', sa.UUID(), nullable=True),
    sa.Column('shipment_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('shipment_status', sa.Enum('PENDING', 'READY', 'DELIVERED', 'FAILED', 'CANCELLED', name='shipmentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['arrival_center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['departure_center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['receiver_company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['receiver_person_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['supplier_company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['supplier_person_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shipments_arrival_center_id'), 'shipments', ['arrival_center_id'], unique=False)
    op.create_index(op.f('ix_shipments_contract_id'), 'shipments', ['contract_id'], unique=False)
    op.create_index(op.f('ix_shipments_creator_id'), 'shipments', ['creator_id'], unique=False)
    op.create_index(op.f('ix_shipments_departure_center_id'), 'shipments', ['departure_center_id'], unique=False)
    op.create_index(op.f('ix_shipments_receiver_company_id'), 'shipments', ['receiver_company_id'], unique=False)
    op.create_index(op.f('ix_shipments_receiver_person_id'), 'shipments', ['receiver_person_id'], unique=False)
    op.create_index(op.f('ix_shipments_supplier_company_id'), 'shipments', ['supplier_company_id'], unique=False)
    op.create_index(op.f('ix_shipments_supplier_person_id'), 'shipments', ['supplier_person_id'], unique=False)
    op.create_table('shipment_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shipment_id', sa.UUID(), nullable=False),
    sa.Column('product_name', sa.String(), nullable=False),
    sa.Column('quality', sa.Enum('A', 'B', 'C', name='productquality'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shipment_items_shipment_id'), 'shipment_items', ['shipment_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_shipment_items_shipment_id'), table_name='shipment_items')
    op.drop_table('shipment_items')
    op.drop_index(op.f('ix_shipments_supplier_person_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_supplier_company_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_receiver_person_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_receiver_company_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_departure_center_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_creator_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_contract_id'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_arrival_center_id'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_table('contract_items')
    op.drop_index(op.f('ix_center_snapshot_items_center_inventory_snapshot_id'), table_name='center_snapshot_items')
    op.drop_table('center_snapshot_items')
    op.drop_table('contracts')
    op.drop_index(op.f('ix_center_inventory_snapshots_snapshot_date'), table_name='center_inventory_snapshots')
    op.drop_index(op.f('ix_center_inventory_snapshots_company_id'), table_name='center_inventory_snapshots')
    op.drop_index(op.f('ix_center_inventory_snapshots_center_id'), table_name='center_inventory_snapshots')
    op.drop_table('center_inventory_snapshots')
    op.drop_table('centers')
    op.drop_table('retail_company_details')
    op.drop_index(op.f('ix_profiles_username'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_table('wholesale_company_details')
    op.drop_table('users')
    op.drop_table('farmer_company_details')
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
