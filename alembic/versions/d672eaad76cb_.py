"""empty message

Revision ID: d672eaad76cb
Revises: 
Create Date: 2025-06-08 13:46:26.041312

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd672eaad76cb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner', sa.UUID(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('business_number', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['wholesalers.id'], name='fk_companies_wholesalers_owner', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('business_number'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('picture_url', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('oauth_sub', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('collection_centers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collection_centers_id'), 'collection_centers', ['id'], unique=False)
    op.create_table('daily_accounting',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('total_prepaid', sa.Float(), nullable=True),
    sa.Column('total_pre_received', sa.Float(), nullable=True),
    sa.Column('total_paid', sa.Float(), nullable=True),
    sa.Column('total_received', sa.Float(), nullable=True),
    sa.Column('total_pending_payment', sa.Float(), nullable=True),
    sa.Column('total_pending_receipt', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('farmers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('farm_size_m2', sa.Float(), nullable=True),
    sa.Column('annual_output_kg', sa.Float(), nullable=True),
    sa.Column('farm_members', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('retailers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('wholesalers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('center_wholesaler',
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('center_id', 'wholesaler_id')
    )
    op.create_table('collection_center_wholesaler',
    sa.Column('collection_center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['collection_center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('collection_center_id', 'wholesaler_id')
    )
    op.create_table('company_crop_inventory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_settlements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('total_wholesale_in_kg', sa.Float(), nullable=True),
    sa.Column('total_wholesale_in_price', sa.Float(), nullable=True),
    sa.Column('total_retail_out_kg', sa.Float(), nullable=True),
    sa.Column('total_retail_out_price', sa.Float(), nullable=True),
    sa.Column('discrepancy_in_kg', sa.Float(), nullable=True),
    sa.Column('discrepancy_out_kg', sa.Float(), nullable=True),
    sa.Column('total_in_kg', sa.Float(), nullable=True),
    sa.Column('total_out_kg', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_contracts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('retailer_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=False),
    sa.Column('contract_date', sa.DateTime(), nullable=False),
    sa.Column('contract_status', sa.Enum('DRAFT', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'PENDING', 'APPROVED', 'REJECTED', name='contractstatus'), nullable=False),
    sa.Column('note', sa.String(length=500), nullable=True),
    sa.Column('shipment_date', sa.Date(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('payment_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['retailer_id'], ['retailers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wholesale_contracts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=False),
    sa.Column('farmer_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('contract_date', sa.Date(), nullable=False),
    sa.Column('contract_status', sa.Enum('DRAFT', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'PENDING', 'APPROVED', 'REJECTED', name='contractstatus'), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('shipment_date', sa.Date(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('payment_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_crop_inventory_item',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('inventory_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(length=100), nullable=False),
    sa.Column('quality_grade', sa.String(length=1), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['company_crop_inventory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_contract_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(length=100), nullable=False),
    sa.Column('quantity_kg', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('quality_required', sa.String(length=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['retail_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_contract_payment_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('old_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('new_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['retail_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_shipments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('retailer_id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=True),
    sa.Column('shipment_date', sa.Date(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('is_finalized', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['retail_contracts.id'], ),
    sa.ForeignKeyConstraint(['retailer_id'], ['retailers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wholesale_contract_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(length=100), nullable=False),
    sa.Column('quantity_kg', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('quality_required', sa.String(length=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['wholesale_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wholesale_contract_payment_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('old_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('new_status', sa.Enum('PREPAID', 'PRE_RECEIVED', 'PAID', 'RECEIVED', 'PENDING_PAYMENT', 'PENDING_RECEIPT', 'PENDING', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['wholesale_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wholesale_shipments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_id', sa.UUID(), nullable=False),
    sa.Column('farmer_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('wholesaler_id', sa.UUID(), nullable=False),
    sa.Column('shipment_date', sa.Date(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('is_finalized', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['center_id'], ['collection_centers.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['wholesale_contracts.id'], ),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmers.id'], ),
    sa.ForeignKeyConstraint(['wholesaler_id'], ['wholesalers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_shipment_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shipment_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(length=100), nullable=False),
    sa.Column('quantity_kg', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('quality_grade', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['retail_shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wholesale_shipment_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('shipment_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('quality_grade', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['wholesale_shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wholesale_shipment_items')
    op.drop_table('retail_shipment_items')
    op.drop_table('wholesale_shipments')
    op.drop_table('wholesale_contract_payment_logs')
    op.drop_table('wholesale_contract_items')
    op.drop_table('retail_shipments')
    op.drop_table('retail_contract_payment_logs')
    op.drop_table('retail_contract_items')
    op.drop_table('company_crop_inventory_item')
    op.drop_table('wholesale_contracts')
    op.drop_table('retail_contracts')
    op.drop_table('daily_settlements')
    op.drop_table('company_crop_inventory')
    op.drop_table('collection_center_wholesaler')
    op.drop_table('center_wholesaler')
    op.drop_table('wholesalers')
    op.drop_table('retailers')
    op.drop_table('farmers')
    op.drop_table('daily_accounting')
    op.drop_index(op.f('ix_collection_centers_id'), table_name='collection_centers')
    op.drop_table('collection_centers')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('companies')
    # ### end Alembic commands ###
